name: Generate/Upload all Coverage Reports

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  yarn:
    env:
      CC_TEST_REPORTER_ID: 65eeb3e25c8014eb19ed65ba696ba40aeb895a0193757c8ab7e069d28ec59d24

    name: Create, format and upload Javascript coverage artifact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Get Code Climate binary
      - name: Download Code Climate Binary
        run: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter

      # Permissions applied to the Code Climate Executable
      - name: Apply executable perms to Code Climate Binary
        run: chmod +x ./cc-test-reporter

      # Before build
      - name: Before build
        run: ./cc-test-reporter before-build

      # Set required Git env vars for either pull request
      - name: Set ENV for codeclimate (pull_request)
        run: |
          echo "GIT_BRANCH=${{ github.event.pull_request.head.ref }}" >> GITHUB_ENV
          echo "GIT_COMMIT_SHA=${{ github.event.pull_request.head.sha }}" >> GITHUB_ENV
        if: github.event_name == 'pull_request'

      # Set required Git env vars for a push to master
      - name: Set ENV for codeclimate (push)
        run: |
          echo "GIT_BRANCH=$GITHUB_REF" >> GITHUB_ENV
          echo "GIT_COMMIT_SHA=$GITHUB_SHA" >> GITHUB_ENV
        if: github.event_name == 'push'

      # Trimming the ref to master in order to publish correct report (paambaati)
      - name: Set ref/head/master to master
        run: |
          echo "GIT_BRANCH=master" >> GITHUB_ENV
        if: env.GIT_BRANCH == 'refs/heads/master'
            
      # Run Yarn Install 
      - name: Run Yarn Install 
        run: yarn install

      # Run lint
      - name: Run lint
        run: yarn run lint

      # Yarn Coverage
      - name: Run Yarn Coverage 
        run: yarn coverage

      # Formatting the coverage report
      - name: Format the coverage report
        run: |
          ./cc-test-reporter format-coverage -t lcov -o coverage/vue-shared-codeclimate.json ${{github.workspace}}/coverage/lcov.info
      
      # Upload JSON for debugging purposes
      - name: Upload JSON for debugging purposes
        uses: actions/upload-artifact@v2
        with:
          name: vue-shared-codeclimate
          path: coverage/vue-shared-codeclimate.json

      # Upload total coverage report to Code Climate
      - name: Upload coverage report to Code Climate
        run: ./cc-test-reporter upload-coverage -i coverage/vue-shared-codeclimate.json
